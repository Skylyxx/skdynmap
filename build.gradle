import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
}

group 'fr.skylyxx.skdynmap'
version '1.2.1'

def mcVersion = '1.16'
def subVersion = '.5'

repositories {
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.destroystokyo.com/repository/maven-public/' }
}

dependencies {
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: mcVersion + subVersion + '-R0.1-SNAPSHOT'
    compileOnly group: 'com.github.SkriptLang', name:  'Skript', version: '2.5.3', {
        exclude module: 'worldguard-legacy'
        exclude module: 'Vault'
    }
    compileOnly group: 'com.github.webbukkit.dynmap', name: 'DynmapCore', version: '3.1-beta-7'
    compileOnly group: 'org.jetbrains', name: 'annotations', version: '20.1.0'
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

jar {
    archiveName("SkDynmap.jar")
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
} as Object

task githubRessources(type: ProcessResources) {
    from("src/main/resources", {
        include("**")
        def lastCommit = getGitHash()
        def ver = project.version + "-Github-" + lastCommit
        filter ReplaceTokens, tokens: [
                'version': ver,
                'apiVersion': mcVersion,
        ]
    })
    into("build/resources/main")
}

task githubRelease(type: Jar) {
    from sourceSets.main.output
    dependsOn(githubRessources)
    archiveName("SkDynmap-Github.jar")
}
githubRelease.finalizedBy(clean)

setLibsDirName("..\\out")
build.finalizedBy(clean)

processResources {
    filter ReplaceTokens, tokens: [
            'version': project.property('version'),
            'apiVersion': mcVersion
    ]
}